basePath: /api/v1
definitions:
  model.CoupletEdge:
    properties:
      cursor:
        type: integer
      node:
        type: string
    type: object
  model.LibraryPageInfo:
    properties:
      endCursor:
        type: integer
      hasNextPage:
        type: boolean
    type: object
  model.Response:
    properties:
      error:
        type: string
      songLibrary:
        $ref: '#/definitions/model.SongsConnection'
      songText:
        $ref: '#/definitions/model.TextConnection'
      status:
        type: string
    type: object
  model.Song:
    properties:
      group:
        type: string
      song:
        type: string
    required:
    - group
    - song
    type: object
  model.SongDetail:
    properties:
      link:
        type: string
      releaseDate:
        type: string
      text:
        type: string
    required:
    - link
    - releaseDate
    - text
    type: object
  model.SongEdge:
    properties:
      cursor:
        type: integer
      node:
        $ref: '#/definitions/model.Song'
    type: object
  model.SongsConnection:
    properties:
      edges:
        items:
          $ref: '#/definitions/model.SongEdge'
        type: array
      pageInfo:
        $ref: '#/definitions/model.LibraryPageInfo'
    type: object
  model.TextConnection:
    properties:
      edges:
        items:
          $ref: '#/definitions/model.CoupletEdge'
        type: array
      pageInfo:
        $ref: '#/definitions/model.TextPageInfo'
    type: object
  model.TextPageInfo:
    properties:
      endCursor:
        type: integer
      hasNextPage:
        type: boolean
    type: object
  put.Request:
    properties:
      dataSong:
        $ref: '#/definitions/model.Song'
      songDetail:
        $ref: '#/definitions/model.SongDetail'
    required:
    - dataSong
    - songDetail
    type: object
host: localhost:8080
info:
  contact:
    email: nabishec@mail.ru
  description: API Server for SongLibrary
  title: Song Library
  version: "1.0"
paths:
  /songslibrary:
    get:
      description: Retrieve the song library with pagination options.
      parameters:
      - description: Name of the song
        in: query
        name: song
        type: string
      - description: Name of the group
        in: query
        name: group
        type: string
      - description: Number of items to return
        in: query
        name: first
        type: integer
      - description: Offset from which to return items
        in: query
        name: after
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/model.Response'
        "404":
          description: No songs matching the request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Failed to get song library
          schema:
            $ref: '#/definitions/model.Response'
      summary: Get Song Library
      tags:
      - songslibrary/song
  /songslibrary/song:
    delete:
      description: Delete a song from the library by song name and group name.
      parameters:
      - description: Name of the song
        in: query
        name: song
        required: true
        type: string
      - description: Name of the group
        in: query
        name: group
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/model.Response'
        "404":
          description: Song doesn't exist
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Failed deletion of song
          schema:
            $ref: '#/definitions/model.Response'
      summary: Delete a Song
      tags:
      - songdelete/song
    get:
      description: Retrieve the text of a song with pagination options.
      parameters:
      - description: Name of the song
        in: query
        name: song
        required: true
        type: string
      - description: Name of the group
        in: query
        name: group
        required: true
        type: string
      - description: Number of items to return
        in: query
        name: first
        type: integer
      - description: Offset from which to return items
        in: query
        name: after
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/model.Response'
        "404":
          description: Song not found
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Failed to get song text
          schema:
            $ref: '#/definitions/model.Response'
      summary: Get Song Text
      tags:
      - songslibrary/song
    post:
      consumes:
      - application/json
      description: Add a new song to the library and fetch its details from an external
        API.
      parameters:
      - description: Song Data
        in: body
        name: songData
        required: true
        schema:
          $ref: '#/definitions/model.Song'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "207":
          description: Failed to get song details
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/model.Response'
        "409":
          description: Song already exists
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Failed to add song
          schema:
            $ref: '#/definitions/model.Response'
      summary: Add Song
      tags:
      - songslibrary/song
    put:
      consumes:
      - application/json
      description: Add the details of a new song to the library.
      parameters:
      - description: Request with song data and details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/put.Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Failed to add song detail
          schema:
            $ref: '#/definitions/model.Response'
      summary: Add Song Detail
      tags:
      - songslibrary/song
swagger: "2.0"
